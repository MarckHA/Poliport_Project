package Interfaz;

import Conectar.ConectarMySQL;
import Conectar.PersistenciaVueloBD;
import com.toedter.calendar.JDateChooser;
import java.awt.Image;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class JFVuelo extends javax.swing.JFrame {

    String contrasenia = "12345678";
    Calendar horaVuelo = new GregorianCalendar();
    ConectarMySQL conexion = new ConectarMySQL();
    Connection con = conexion.getConexion("root", contrasenia);
    JFMenu menu = new JFMenu();
    PersistenciaVueloBD perVuelos = new PersistenciaVueloBD();
    String idVuelo, aerolinea, hora, fecha, precio;
    private boolean control;

    public JFVuelo() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(getIconImage()); 
        perVuelos.mostrarVuelos(JTregistroVuelos,1,"");
        jDCfechaVuelo.setMinSelectableDate(new Date());
        jDCfechaActualizar.setMinSelectableDate(new Date());
        jDChora.setCalendar(horaVuelo);
    }

    public boolean isControl() {
        return control;
    }

    public void setControl(boolean control) {
        this.control = control;
    }
            
    @Override
    public Image getIconImage(){
        Image logo = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagen/LogoForm.png"));
        return logo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTPeliminar = new javax.swing.JTabbedPane();
        JPInsertarVuelo = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTFIDVuelo = new javax.swing.JTextField();
        jTFHoraVuelo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JTFaerolínea = new javax.swing.JTextField();
        jCBorigenVuelo = new javax.swing.JComboBox<>();
        jCBdestinoVuelo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jDCfechaVuelo = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jTFPrecioVuelo = new javax.swing.JTextField();
        jBRegistrar = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JTregistroVuelos = new javax.swing.JTable();
        JBnuevo = new javax.swing.JButton();
        jDChora = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        JPConsultarVuelo = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jCBVueloOrigen = new javax.swing.JCheckBox();
        jCBVueloDestino = new javax.swing.JCheckBox();
        jCBHoraVuelo = new javax.swing.JCheckBox();
        jCBaerolinea = new javax.swing.JCheckBox();
        jCBfecha = new javax.swing.JCheckBox();
        jCBPrecio = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jTFIngresoDatoABuscar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        JBnuevoConsultar = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTvuelosConsultar = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        JPActualizarVuelo = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        JBaerolinea = new javax.swing.JCheckBox();
        jBVueloOrigen = new javax.swing.JCheckBox();
        jBVueloDestino = new javax.swing.JCheckBox();
        jBHoraVuelo = new javax.swing.JCheckBox();
        jTFaerolineaActualizar = new javax.swing.JTextField();
        JTFhoraVueloActualizar = new javax.swing.JTextField();
        JCBorigenActualizar = new javax.swing.JComboBox<>();
        JCBdestinoActualizar = new javax.swing.JComboBox<>();
        jBfecha = new javax.swing.JCheckBox();
        jDCfechaActualizar = new com.toedter.calendar.JDateChooser();
        jCBIDvuelo = new javax.swing.JCheckBox();
        JTFIDVueloActualizar = new javax.swing.JTextField();
        jBPrecioActualizar = new javax.swing.JCheckBox();
        JTFPrecioActualizar = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jBActualizar = new javax.swing.JButton();
        jTFElegirRegistro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        JBnuevoActualizar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTvuelosActualizar = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        JPEliminarVuelo = new javax.swing.JPanel();
        jBEliminar = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        JTvuelos = new javax.swing.JTable();
        JBnuevoEliminar = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        JTFidVueloEliminar = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jBRegresarMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Opciones administrativas");

        JTPeliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTPeliminarMouseClicked(evt);
            }
        });
        JTPeliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTPeliminarKeyPressed(evt);
            }
        });

        JPInsertarVuelo.setBackground(new java.awt.Color(204, 204, 255));
        JPInsertarVuelo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 204, 204,20));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Vuelos"));

        jLabel4.setText("Precio");

        jLabel5.setText("Vuelo Origen :");

        jLabel6.setText("Vuelo Destino :");

        jLabel7.setText("Hora del vuelo :");

        jTFIDVuelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFIDVueloKeyTyped(evt);
            }
        });

        jTFHoraVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFHoraVueloActionPerformed(evt);
            }
        });
        jTFHoraVuelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFHoraVueloKeyPressed(evt);
            }
        });

        jLabel2.setText("ID Avion:");

        JTFaerolínea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTFaerolíneaKeyTyped(evt);
            }
        });

        jCBorigenVuelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "Quito", "Guayaquil", "Madrid", "Medellin" }));
        jCBorigenVuelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBorigenVueloItemStateChanged(evt);
            }
        });

        jCBdestinoVuelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "Quito", "Guayaquil", "Madrid", "Medellin" }));

        jLabel1.setText("Fecha:");

        jDCfechaVuelo.setDateFormatString("d/MM/y");

        jLabel10.setText("ID Vuelo :");

        jTFPrecioVuelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFPrecioVueloKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFIDVuelo)
                            .addComponent(JTFaerolínea)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFHoraVuelo)
                            .addComponent(jDCfechaVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCBorigenVuelo, 0, 221, Short.MAX_VALUE)
                            .addComponent(jCBdestinoVuelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPrecioVuelo)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTFIDVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFaerolínea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBorigenVuelo)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBdestinoVuelo)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDCfechaVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFHoraVuelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFPrecioVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JPInsertarVuelo.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jBRegistrar.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jBRegistrar.setText("Registrar");
        jBRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegistrarActionPerformed(evt);
            }
        });
        JPInsertarVuelo.add(jBRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 109, 29));

        jPanel15.setBackground(new java.awt.Color(255, 51, 51,20));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de vuelos"));

        JTregistroVuelos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(JTregistroVuelos);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        JPInsertarVuelo.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 646, 260));

        JBnuevo.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        JBnuevo.setText("Nuevo");
        JBnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBnuevoActionPerformed(evt);
            }
        });
        JPInsertarVuelo.add(JBnuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 109, 29));

        jDChora.setDateFormatString("HH:mm:ss");
        JPInsertarVuelo.add(jDChora, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/fondoVuelo.jpg"))); // NOI18N
        JPInsertarVuelo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        JTPeliminar.addTab("Insertar", JPInsertarVuelo);

        JPConsultarVuelo.setBackground(new java.awt.Color(204, 204, 255));
        JPConsultarVuelo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(0, 102, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Atributos a mostrar"));

        jCBVueloOrigen.setText("Vuelo Origen");

        jCBVueloDestino.setText("Vuelo Destino");
        jCBVueloDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBVueloDestinoActionPerformed(evt);
            }
        });

        jCBHoraVuelo.setText("Hora Vuelo");

        jCBaerolinea.setText("ID Avión");

        jCBfecha.setText("Fecha");

        jCBPrecio.setText("Precio");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBVueloOrigen)
                    .addComponent(jCBVueloDestino)
                    .addComponent(jCBaerolinea, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBHoraVuelo))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCBaerolinea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBfecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBVueloOrigen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBVueloDestino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBHoraVuelo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBPrecio)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        JPConsultarVuelo.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jPanel8.setBackground(new java.awt.Color(0, 204, 204,20));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda"));

        jTFIngresoDatoABuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFIngresoDatoABuscarKeyReleased(evt);
            }
        });

        jLabel9.setText("Ingrese el identificador del vuelo:");

        JBnuevoConsultar.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        JBnuevoConsultar.setText("Nuevo");
        JBnuevoConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBnuevoConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTFIngresoDatoABuscar)))
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(JBnuevoConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFIngresoDatoABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JBnuevoConsultar)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        JPConsultarVuelo.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 230, -1));

        jPanel9.setBackground(new java.awt.Color(255, 51, 51,20));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados de vuelos"));

        JTvuelosConsultar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(JTvuelosConsultar);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );

        JPConsultarVuelo.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 670, 320));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/fondoVuelo.jpg"))); // NOI18N
        JPConsultarVuelo.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        JTPeliminar.addTab("Consultar", JPConsultarVuelo);

        JPActualizarVuelo.setBackground(new java.awt.Color(204, 204, 255));
        JPActualizarVuelo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(0, 102, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Atributos a Actualizar"));

        JBaerolinea.setText("Aerolínea");

        jBVueloOrigen.setText("Vuelo Origen");

        jBVueloDestino.setText("Vuelo Destino");

        jBHoraVuelo.setText("Hora Vuelo");

        JTFhoraVueloActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFhoraVueloActualizarActionPerformed(evt);
            }
        });
        JTFhoraVueloActualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTFhoraVueloActualizarKeyPressed(evt);
            }
        });

        JCBorigenActualizar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "Quito", "Guayaquil", "Medellin", "Madrid" }));
        JCBorigenActualizar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCBorigenActualizarItemStateChanged(evt);
            }
        });

        JCBdestinoActualizar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "Quito", "Guayaquil", "Medellin", "Madrid" }));
        JCBdestinoActualizar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCBdestinoActualizarItemStateChanged(evt);
            }
        });

        jBfecha.setText("Fecha");

        jDCfechaActualizar.setDateFormatString("d/MM/y");
        jDCfechaActualizar.setMaxSelectableDate(new java.util.Date(253370786484000L));

        jCBIDvuelo.setText("ID vuelo");

        jBPrecioActualizar.setText("Precio");

        JTFPrecioActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFPrecioActualizarActionPerformed(evt);
            }
        });
        JTFPrecioActualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTFPrecioActualizarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jCBIDvuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JTFhoraVueloActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                            .addComponent(jDCfechaActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JTFIDVueloActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                            .addComponent(JCBdestinoActualizar, 0, 470, Short.MAX_VALUE)
                            .addComponent(jTFaerolineaActualizar)
                            .addComponent(JCBorigenActualizar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBfecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBHoraVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jBVueloDestino, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBVueloOrigen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(JBaerolinea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jBPrecioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(JTFPrecioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBIDvuelo)
                    .addComponent(JTFIDVueloActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFaerolineaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBaerolinea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCBorigenActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVueloOrigen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCBdestinoActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVueloDestino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBfecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCfechaActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFhoraVueloActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBHoraVuelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBPrecioActualizar)
                    .addComponent(JTFPrecioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134))
        );

        JPActualizarVuelo.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 232));

        jPanel11.setBackground(new java.awt.Color(255, 0, 0,20));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Elegir Registro"));

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jTFElegirRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFElegirRegistroKeyReleased(evt);
            }
        });

        jLabel8.setText("ID:");

        JBnuevoActualizar.setText("Nuevo");
        JBnuevoActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBnuevoActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFElegirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(JBnuevoActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFElegirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBnuevoActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        JPActualizarVuelo.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 264, -1, 90));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Registros"));

        JTvuelosActualizar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JTvuelosActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTvuelosActualizarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTvuelosActualizar);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        JPActualizarVuelo.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 634, 210));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/fondoVuelo.jpg"))); // NOI18N
        JPActualizarVuelo.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, -1));

        JTPeliminar.addTab("Actualizar", JPActualizarVuelo);

        JPEliminarVuelo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });
        JPEliminarVuelo.add(jBEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 93, 35));

        jPanel14.setBackground(new java.awt.Color(153, 0, 153,20));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Registros"));

        JTvuelos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(JTvuelos);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        JPEliminarVuelo.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 670, 400));

        JBnuevoEliminar.setText("Nuevo");
        JBnuevoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBnuevoEliminarActionPerformed(evt);
            }
        });
        JPEliminarVuelo.add(JBnuevoEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 100, 35));

        jPanel16.setBackground(new java.awt.Color(204, 153, 255,20));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificador del vuelo"));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(JTFidVueloEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JTFidVueloEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JPEliminarVuelo.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 16, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/fondoVuelo.jpg"))); // NOI18N
        JPEliminarVuelo.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, -1));

        JTPeliminar.addTab("Eliminar", JPEliminarVuelo);

        jBRegresarMenu.setText("Regresar al menu");
        jBRegresarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegresarMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBRegresarMenu)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(JTPeliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JTPeliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 624, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBRegresarMenu)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método para hacer que los checkBox y los recuadros en actualizar se encuentren NO habilitados.
     */
    public void noEditables(){
        if(!this.jCBIDvuelo.isSelected()){ this.jCBIDvuelo.setEnabled(false); this.JTFIDVueloActualizar.setEnabled(false); }
        if(!this.JBaerolinea.isSelected()){ this.JBaerolinea.setEnabled(false); this.jTFaerolineaActualizar.setEnabled(false); }
        if(!this.jBVueloOrigen.isSelected()){ this.jBVueloOrigen.setEnabled(false); this.JCBorigenActualizar.setEnabled(false);}
        if(!this.jBVueloDestino.isSelected()){ this.jBVueloDestino.setEnabled(false); this.JCBdestinoActualizar.setEnabled(false); }
        if(!this.jBHoraVuelo.isSelected()){ this.jBHoraVuelo.setEnabled(false); this.JTFhoraVueloActualizar.setEnabled(false);}
        if(!this.jBfecha.isSelected()){ this.jBfecha.setEnabled(false); this.jDCfechaActualizar.setEnabled(false);}
        if(!this.jBPrecioActualizar.isSelected()){ this.jBPrecioActualizar.setEnabled(false); this.JTFPrecioActualizar.setEnabled(false); }
    }
    /**
     * Método para hacer que los checkBox y los recuadros en actualizar se encuentren habilitados.
     */
    public void editables(){
        if(!this.jCBIDvuelo.isSelected()){ this.jCBIDvuelo.setEnabled(true); this.JTFIDVueloActualizar.setEnabled(true); }
        if(!this.JBaerolinea.isSelected()){ this.JBaerolinea.setEnabled(true); this.jTFaerolineaActualizar.setEnabled(true); }
        if(!this.jBVueloOrigen.isSelected()){ this.jBVueloOrigen.setEnabled(true); this.JCBorigenActualizar.setEnabled(true);}
        if(!this.jBVueloDestino.isSelected()){ this.jBVueloDestino.setEnabled(true); this.JCBdestinoActualizar.setEnabled(true); }
        if(!this.jBHoraVuelo.isSelected()){ this.jBHoraVuelo.setEnabled(true); this.JTFhoraVueloActualizar.setEnabled(true);}
        if(!this.jBfecha.isSelected()){ this.jBfecha.setEnabled(true); this.jDCfechaActualizar.setEnabled(true);}
        if(!this.jBPrecioActualizar.isSelected()){ this.jBPrecioActualizar.setEnabled(true); this.JTFPrecioActualizar.setEnabled(true); }
    }
    /**
     * Método para sacar los datos de un vuelo en base a al identificador de cada vuelo.
     */
    private void sacarDatos() {
        int itemO=0;
        int itemD=0;
        DefaultTableModel modelo = (DefaultTableModel) JTvuelosConsultar.getModel();
        idVuelo = (String) modelo.getValueAt(0, 0);
        aerolinea = (String) modelo.getValueAt(0, 1);
        fecha = (String) modelo.getValueAt(0, 2);
        hora = (String) modelo.getValueAt(0, 5);
        precio = (String) modelo.getValueAt(0, 6);
        for( int i=1; i<=this.JCBorigenActualizar.getItemCount();i++){
            if(lecturaRegex(this.JCBorigenActualizar.getItemAt(i), (String) modelo.getValueAt(0, 3))){
                itemO=i;
                break;
            }
        }
        this.JCBorigenActualizar.setSelectedIndex(itemO);
        for( int i=1; i<=this.JCBdestinoActualizar.getItemCount();i++){
            if(lecturaRegex(this.JCBdestinoActualizar.getItemAt(i), (String) modelo.getValueAt(0, 4))){
                itemD=i;
                break;
            }
        }
        this.JCBdestinoActualizar.setSelectedIndex(itemD); 
    }
    /**
     * Método para mostrar la Tabla actualizada en la pestaña Actualizar.
     */
    private void mostrarTabla(){
        ArrayList<String> atributosMostrar = new ArrayList<>();
        ArrayList<String> nombresColumnas = new ArrayList<>();
        atributosMostrar.add("vueloID"); nombresColumnas.add("ID del vuelo");
        if(JBaerolinea.isSelected()){atributosMostrar.add("avionID"); nombresColumnas.add("ID del Avion");}
        if(jBfecha.isSelected()){atributosMostrar.add("Fecha"); nombresColumnas.add("Fecha de salida");}
        if(jBVueloOrigen.isSelected()){atributosMostrar.add("Origen"); nombresColumnas.add("Origen");}
        if(jBVueloDestino.isSelected()){atributosMostrar.add("Destino"); nombresColumnas.add("Destino");}
        if(jBHoraVuelo.isSelected()){atributosMostrar.add("Hora"); nombresColumnas.add("Hora de salida");}
        if(jBPrecioActualizar.isSelected()){atributosMostrar.add("Precio"); nombresColumnas.add("Precio");}
        String atributoBuscar = "vueloID";
        String condicion ="'%"+ jTFElegirRegistro.getText()+ "%'";
        perVuelos.consultarVuelo(JTvuelosActualizar,atributosMostrar, atributoBuscar, condicion, nombresColumnas);
    }
    /**
     * Método para leer que el identificador de vuelo tenga 3 dígitos, este método nos ayuda a sacar los datos
     * en el Método KeyReleased de Consultar y Actualizar.
     * @param comprobacion
     * @return 
     */
    private boolean lecturaID(){
        boolean flag=false;
        String patron="^(\\d{3})$";
        if(lecturaRegex(this.jTFElegirRegistro.getText(), patron)){
            flag=true;
        } else{
            this.JTFPrecioActualizar.setText("");
            this.JTFIDVueloActualizar.setText("");
            this.jTFaerolineaActualizar.setText("");
            this.JTFhoraVueloActualizar.setText("");
            this.JCBorigenActualizar.setSelectedIndex(0);
            this.JCBdestinoActualizar.setSelectedIndex(0);
            this.jDCfechaActualizar.setCalendar(null);
            editables();
        }  
        return flag;
    }
    /**
     * Método para leer que comparar strings mediante expresiones regulares.
     * @param comprobación
     * @param patron
     * @return 
     */
    private boolean lecturaRegex(String comprobación, String patron){
        Pattern pat= Pattern.compile(patron);
        Matcher mat= pat.matcher(comprobación);
        return mat.matches();
    }
    /**
     * Método para controlar que el formato de la hora sea el adecuado.
     * @return 
     */
    private boolean controlHora(JTextField hora){
        boolean bandera = false;
        String patron = "^([01]?[0-9]|2[0-3])h([0-5][0-9])$";
         if(lecturaRegex(hora.getText(),patron)){
            bandera = true;
        }
        return bandera;
    }
    /**
     * Método para cuando aplastan el botón Registrar.
     * @param evt 
     */
    private void jBRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegistrarActionPerformed
        SimpleDateFormat ff = new SimpleDateFormat("dd/MM/yyyy");
        int IDVuelo = Integer.parseInt(this.jTFIDVuelo.getText());
        String avionID = this.JTFaerolínea.getText();
        String Fecha= ff.format(jDCfechaVuelo.getCalendar().getTime());
        String VueloOrigen = this.jCBorigenVuelo.getSelectedItem().toString();
        String VueloDestino = this.jCBdestinoVuelo.getSelectedItem().toString(); 
        String HoraDelVuelo = this.jTFHoraVuelo.getText();
        double Precio = Double.parseDouble(this.jTFPrecioVuelo.getText());
        perVuelos.registrarVuelo( IDVuelo, avionID, Fecha, VueloOrigen, VueloDestino, HoraDelVuelo, Precio);
        perVuelos.mostrarVuelos(JTregistroVuelos,1,"");

    }//GEN-LAST:event_jBRegistrarActionPerformed

    private void jCBVueloDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBVueloDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBVueloDestinoActionPerformed
    /**
     * Método para leer los números ingresados en el recuadro de buscar en la pestaña Consultar,
     * tener cuidado con los nombres que se agregan a atributosMostrar pues
     * dependen de los nombres en las tablas del MySQL.
     * @param evt 
     */
    private void jTFIngresoDatoABuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFIngresoDatoABuscarKeyReleased
        ArrayList<String> atributosMostrar = new ArrayList<>();
        ArrayList<String> nombresColumnas = new ArrayList<>();
        atributosMostrar.add("vueloID"); nombresColumnas.add("ID del vuelo");
        if(jCBaerolinea.isSelected()){atributosMostrar.add("avionID"); nombresColumnas.add("ID del avión");}
        if(jCBfecha.isSelected()){atributosMostrar.add("Fecha"); nombresColumnas.add("Fecha de salida");}
        if (jCBVueloOrigen.isSelected()){atributosMostrar.add("Origen"); nombresColumnas.add("Origen");}
        if (jCBVueloDestino.isSelected()){atributosMostrar.add("Destino"); nombresColumnas.add("Destino");}
        if (jCBHoraVuelo.isSelected()){atributosMostrar.add("Hora"); nombresColumnas.add("Hora de salida");}
        if (jCBPrecio.isSelected()){atributosMostrar.add("Precio"); nombresColumnas.add("Precio");}
        String atributoBuscar = "vueloID";
        String condicion ="'%"+ jTFIngresoDatoABuscar.getText()+ "%'";
        perVuelos.consultarVuelo(JTvuelosConsultar,atributosMostrar, atributoBuscar, condicion, nombresColumnas);
        JTvuelosConsultar.setVisible(true);
    }//GEN-LAST:event_jTFIngresoDatoABuscarKeyReleased
    /**
     * Método para cuando aplastan el botón Actualizar, se llaman lo métodos correspondientes y se bloquean 
     * los recuadros.Para visualizar bien tienen que correr el menú por el Play, sino no se ve el recuadro fecha.
     * @param evt 
     */
    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        SimpleDateFormat ff = new SimpleDateFormat("dd/MM/yyyy");
        ArrayList<String> atributosActualizar = new ArrayList<>();
        if(jCBIDvuelo.isSelected()){atributosActualizar.add("vueloID= '"+JTFIDVueloActualizar.getText()+"'");}
        if(JBaerolinea.isSelected()){atributosActualizar.add("avionID= '" + jTFaerolineaActualizar.getText()+"'");}
        if(jBVueloOrigen.isSelected()){atributosActualizar.add("Origen= '" + JCBorigenActualizar.getSelectedItem().toString()+"'");}
        if(jBVueloDestino.isSelected()){atributosActualizar.add("Destino= '" + JCBdestinoActualizar.getSelectedItem().toString()+"'");}
        if(jBHoraVuelo.isSelected()){atributosActualizar.add("Hora= '" + JTFhoraVueloActualizar.getText()+"'");}
        if(jBfecha.isSelected()){atributosActualizar.add("Fecha= '"+ff.format(jDCfechaActualizar.getCalendar().getTime())+"'");}
        if(jBPrecioActualizar.isSelected()){atributosActualizar.add("Precio= '" + JTFPrecioActualizar.getText()+"'");}
        String atributoActualizar = "vueloID";
        String condicion = "'"+ jTFElegirRegistro.getText()+"'" ;
        perVuelos.actualizarVuelo(atributosActualizar, atributoActualizar, condicion);
        mostrarTabla();
        
    }//GEN-LAST:event_jBActualizarActionPerformed
    /**
     * Método para cuando aplastan el botón Eliminar, primero verifica que exista el vuelo y luego lo elimina.
     * @param evt 
     */
    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        String codigoIDVuelo = this.JTFidVueloEliminar.getText();
        if(perVuelos.verificacionVuelo( codigoIDVuelo)){
            perVuelos.mostrarVuelos(JTvuelosConsultar, 2, codigoIDVuelo);
            sacarDatos();
            int respuesta = JOptionPane.showConfirmDialog(null,"¿Está seguro que desea eliminar el siguiente registro?\n"+
                        "ID del vuelo: "+idVuelo+"\nID del avión: "+aerolinea+"\nFecha de Salida: "+fecha+"\nOrigen: "+JCBorigenActualizar.getSelectedItem()+
                    "\nDestino: "+JCBdestinoActualizar.getSelectedItem()+"\nHora: "+hora+"\nPrecio: "+precio, "Advertencia", JOptionPane.YES_NO_OPTION
                    , JOptionPane.WARNING_MESSAGE);
            if(respuesta== JOptionPane.YES_OPTION){
                perVuelos.eliminarVuelo(codigoIDVuelo);
                perVuelos.mostrarVuelos(JTvuelos,1,""); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "El número de identificación del avión no existe."
                    + "\nPor favor revise su entrada.","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBEliminarActionPerformed
    /**
     * Método para controlar que se muestran las tablas actualizadas en las pestañas Insertar y Eliminar.
     * @param evt 
     */
    private void JTPeliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTPeliminarMouseClicked
        perVuelos.mostrarVuelos(JTvuelos,1,"");
        perVuelos.mostrarVuelos(JTregistroVuelos,1,"");
    }//GEN-LAST:event_JTPeliminarMouseClicked
    /**
     * Método para cuando aplastan el botón Nuevo en la pestaña Insertar.
     * @param evt 
     */
    private void JBnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBnuevoActionPerformed
        this.jTFIDVuelo.setText("");
        this.jTFHoraVuelo.setText("");
        this.JTFaerolínea.setText("");
        this.jCBorigenVuelo.setSelectedIndex(0);
        this.jCBdestinoVuelo.setSelectedIndex(0);
        this.jDCfechaVuelo.setCalendar(null);
        this.jTFHoraVuelo.setText("");
        this.jTFPrecioVuelo.setText("");
        this.jTFIDVuelo.requestFocus();
    }//GEN-LAST:event_JBnuevoActionPerformed
    
    private void jTFIDVueloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFIDVueloKeyTyped
        char variable = evt.getKeyChar();
        if (Character.isLetter(variable)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Por favor ingrese solo numeros", "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTFIDVueloKeyTyped
    /**
     * Método para cuando aplastan el botón Nuevo en la pestaña Consultar.
     * @param evt 
     */
    private void JBnuevoConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBnuevoConsultarActionPerformed
        this.jTFIngresoDatoABuscar.setText("");
        this.jCBaerolinea.setSelected(false);
        this.jCBfecha.setSelected(false);
        this.jCBVueloOrigen.setSelected(false);
        this.jCBVueloDestino.setSelected(false);
        this.jTFHoraVuelo.setText("");
        this.jTFPrecioVuelo.setText("");
        this.jTFIngresoDatoABuscar.requestFocus();
    }//GEN-LAST:event_JBnuevoConsultarActionPerformed
    /**
     * Método para cuando aplastan el botón nuevo en la pestaña Actualizar.
     * @param evt 
     */
    private void JBnuevoActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBnuevoActualizarActionPerformed
        this.JTFIDVueloActualizar.setText("");
        this.JTFhoraVueloActualizar.setText("");
        this.jTFaerolineaActualizar.setText("");
        this.jTFElegirRegistro.setText("");
        this.JTFPrecioActualizar.setText("");
        this.JCBorigenActualizar.setSelectedIndex(0);
        this.JCBdestinoActualizar.setSelectedIndex(0);
        this.jDCfechaActualizar.setCalendar(null);
        if(this.jCBIDvuelo.isSelected()){ this.jCBIDvuelo.setSelected(false);  }
        if(this.JBaerolinea.isSelected()){ this.JBaerolinea.setSelected(false);  }
        if(this.jBVueloOrigen.isSelected()){ this.jBVueloOrigen.setSelected(false);}
        if(this.jBVueloDestino.isSelected()){ this.jBVueloDestino.setSelected(false); }
        if(this.jBHoraVuelo.isSelected()){ this.jBHoraVuelo.setSelected(false); }
        if(this.jBfecha.isSelected()){ this.jBfecha.setSelected(false); }
        if(this.jBPrecioActualizar.isSelected()){ this.jBPrecioActualizar.setSelected(false); }
        editables();
        
        
        
    }//GEN-LAST:event_JBnuevoActualizarActionPerformed
    /**
     * Método para cuando aplastan el botón Nuevo en la pestaña Eliminar.
     * @param evt 
     */
    private void JBnuevoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBnuevoEliminarActionPerformed
        this.JTFidVueloEliminar.setText("");
        this.JTFidVueloEliminar.requestFocus();
    }//GEN-LAST:event_JBnuevoEliminarActionPerformed
    
    private void JTPeliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTPeliminarKeyPressed
        JTPeliminar.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, java.util.Collections.EMPTY_SET);
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            this.setVisible(false);
        }
    }//GEN-LAST:event_JTPeliminarKeyPressed
    /**
     * Método para mostrar y controlar el paso de datos a los recuadros correspondientes en la 
     * pestaña Actualizar y su habilitación para modificarse cuando el identificador de vuelo ha sido ingresado por completo.
     * @param evt 
     */
    private void jTFElegirRegistroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFElegirRegistroKeyReleased
        mostrarTabla();
        if(lecturaID()){
            String condicion = "'"+ jTFElegirRegistro.getText()+"'" ;
            perVuelos.mostrarVuelos(JTvuelosConsultar, 2, condicion);
            try {
                sacarDatos();
                this.JTFIDVueloActualizar.setText(idVuelo);
                this.jTFaerolineaActualizar.setText(aerolinea);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                Date date = formatoFecha.parse(fecha);
                Calendar calendario = Calendar.getInstance();
                calendario.setTime(date);
                this.jDCfechaActualizar.setCalendar(calendario);
                this.JTFhoraVueloActualizar.setText(hora);
                this.JTFPrecioActualizar.setText(precio);
            } catch (ParseException ex) {
                Logger.getLogger(JFVuelo.class.getName()).log(Level.SEVERE, null, ex);
            }
            JTvuelosConsultar.setVisible(false);
            noEditables();
        }  
    }//GEN-LAST:event_jTFElegirRegistroKeyReleased

    private void JTvuelosActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTvuelosActualizarMouseClicked
        
    }//GEN-LAST:event_JTvuelosActualizarMouseClicked

    private void jBRegresarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegresarMenuActionPerformed
        menu.setVisible(true);
    }//GEN-LAST:event_jBRegresarMenuActionPerformed

    private void JCBorigenActualizarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCBorigenActualizarItemStateChanged
        
    }//GEN-LAST:event_JCBorigenActualizarItemStateChanged

    private void jCBorigenVueloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBorigenVueloItemStateChanged
        // TODO add your handling code here:
        //String opcion1 = (String)this.jCBorigenVuelo.getSelectedItem();
        DefaultComboBoxModel<String> jCBdestinoModel = new DefaultComboBoxModel<>();
        
        if(this.jCBorigenVuelo.getSelectedIndex()!=0){
            for(int i = 0; i < this.jCBorigenVuelo.getItemCount();i++){
                jCBdestinoModel.addElement(this.jCBorigenVuelo.getItemAt(i));
            }
            jCBdestinoModel.removeElement(this.jCBorigenVuelo.getSelectedItem());
        }else{
            jCBdestinoModel.addElement("Seleccione primero un origen...");
        }
        
        this.jCBdestinoVuelo.setModel(jCBdestinoModel);
    }//GEN-LAST:event_jCBorigenVueloItemStateChanged

    private void JCBdestinoActualizarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCBdestinoActualizarItemStateChanged
        /*
        String opcion1 = (String)this.JCBorigenActualizar.getSelectedItem();
        DefaultComboBoxModel<String> jCBdestinoModelAct = new DefaultComboBoxModel<>();
        
        ConectarMySQL objetoConexion = new ConectarMySQL();
        Statement st;
        String sql = "";
        
        try {
            st = objetoConexion.getConexion("root",contrasenia).createStatement();

            sql="SELECT origen FROM Vuelo WHERE vueloID =" + jTFElegirRegistro.getText() + ";";
            ResultSet rs = st.executeQuery(sql);
            
            if(rs.next()){
                String origen = rs.getString("origen");
                //JOptionPane.showMessageDialog(null, origen);
            for(int i = 0; i < this.JCBorigenActualizar.getItemCount();i++){
                jCBdestinoModelAct.addElement(this.JCBorigenActualizar.getItemAt(i));
            }
            jCBdestinoModelAct.removeElement(origen);
                
        this.JCBdestinoActualizar.setModel(jCBdestinoModelAct);
            }else{
                JOptionPane.showMessageDialog(null, "No se encontraron resultados para el vuelo ID especificado.");
            }
            
        rs.close();
        st.close();
            
            
        } catch (SQLException ex) {
            //Logger.getLogger(JFVuelo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No se pudo mostrar los registros, error: "+ex.toString());
        }
        */
    }//GEN-LAST:event_JCBdestinoActualizarItemStateChanged

    private void JTFhoraVueloActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFhoraVueloActualizarActionPerformed
        // TODO add your handling code here:
        controlHoraVuelo(JTFhoraVueloActualizar,jDCfechaActualizar);
    }//GEN-LAST:event_JTFhoraVueloActualizarActionPerformed

    private void JTFhoraVueloActualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFhoraVueloActualizarKeyPressed
        // TODO add your handling code here:
        JTFhoraVueloActualizar.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, java.util.Collections.EMPTY_SET);
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_TAB){
            if(!controlHora(JTFhoraVueloActualizar)){
                JOptionPane.showMessageDialog(null, "Ingrese la hora en el formato adecuado. \nEjemplo: 17h30");
                this.JTFhoraVueloActualizar.setText("");
            } else{
                this.jTFElegirRegistro.requestFocus();
            }         
        }
    }//GEN-LAST:event_JTFhoraVueloActualizarKeyPressed

    private void JTFPrecioActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFPrecioActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFPrecioActualizarActionPerformed

    private void JTFPrecioActualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFPrecioActualizarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFPrecioActualizarKeyPressed

    private void jTFHoraVueloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFHoraVueloKeyPressed
        jTFHoraVuelo.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, java.util.Collections.EMPTY_SET);
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_TAB){
            if(!controlHora(jTFHoraVuelo)){
                JOptionPane.showMessageDialog(null, "Ingrese la hora en el formato adecuado. \nEjemplo: 17h30");
                this.jTFHoraVuelo.setText("");
            } else{
                this.jBRegistrar.requestFocus();
            }
        }
    }//GEN-LAST:event_jTFHoraVueloKeyPressed

    private void jTFHoraVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFHoraVueloActionPerformed
        // TODO add your handling code here:
        controlHoraVuelo(jTFHoraVuelo,jDCfechaVuelo);

    }//GEN-LAST:event_jTFHoraVueloActionPerformed

    private void jTFPrecioVueloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPrecioVueloKeyTyped
        char variable = evt.getKeyChar();
        if (Character.isLetter(variable)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Por favor ingrese solo numeros", "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTFPrecioVueloKeyTyped

    private void JTFaerolíneaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFaerolíneaKeyTyped
        char variable = evt.getKeyChar();
        if (Character.isLetter(variable)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Por favor ingrese solo numeros", "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_JTFaerolíneaKeyTyped

    private void controlHoraVuelo(JTextField hora, JDateChooser fecha){
        //OBTENER HORA ACTUAL
        String horaString = hora.getText();
        Date fechaDate =  fecha.getDate();
        
        LocalTime horaActual = LocalTime.now();
        
        //OBTENER HORA INGRESADA
        if(!horaString.isEmpty()){
            
            String horaIngresadaComp = horaString;
            if(horaString.substring(0, horaString.lastIndexOf('h')).length() <= 1){
                horaIngresadaComp = "0" + horaIngresadaComp;
            }
            DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("HH'h'mm");
            LocalTime horaIngresada = LocalTime.parse(horaIngresadaComp,formatter2);


            //OBTENER FECHA ACTUAL
            LocalDate fechaActual = LocalDate.now();

            //OBTENER FECHA INGRESADA
            Date fechaIngresadaComp = fechaDate;
            LocalDate fechaIngresada = fechaIngresadaComp.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            //Actual
            LocalDateTime dateTimeActual = LocalDateTime.of(fechaActual.getYear(), 
                    fechaActual.getMonthValue(), fechaActual.getDayOfMonth(), 
                    horaActual.getHour(), horaActual.getMinute());
            //Ingresado
            LocalDateTime dateTimeIngresado = LocalDateTime.of(fechaIngresada.getYear(), 
                    fechaIngresada.getMonthValue(), fechaIngresada.getDayOfMonth(), 
                    horaIngresada.getHour(),horaIngresada.getMinute());

            if(dateTimeIngresado.isBefore(dateTimeActual)){
                JOptionPane.showMessageDialog(null, "No se puede crear un vuelo anterior a la fecha y hora actual.");
                hora.setText("");
                hora.requestFocus();
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFVuelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFVuelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFVuelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFVuelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFVuelo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox JBaerolinea;
    private javax.swing.JButton JBnuevo;
    private javax.swing.JButton JBnuevoActualizar;
    private javax.swing.JButton JBnuevoConsultar;
    private javax.swing.JButton JBnuevoEliminar;
    private javax.swing.JComboBox<String> JCBdestinoActualizar;
    private javax.swing.JComboBox<String> JCBorigenActualizar;
    private javax.swing.JPanel JPActualizarVuelo;
    private javax.swing.JPanel JPConsultarVuelo;
    private javax.swing.JPanel JPEliminarVuelo;
    private javax.swing.JPanel JPInsertarVuelo;
    private javax.swing.JTextField JTFIDVueloActualizar;
    private javax.swing.JTextField JTFPrecioActualizar;
    private javax.swing.JTextField JTFaerolínea;
    private javax.swing.JTextField JTFhoraVueloActualizar;
    private javax.swing.JTextField JTFidVueloEliminar;
    private javax.swing.JTabbedPane JTPeliminar;
    private javax.swing.JTable JTregistroVuelos;
    private javax.swing.JTable JTvuelos;
    private javax.swing.JTable JTvuelosActualizar;
    private javax.swing.JTable JTvuelosConsultar;
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JCheckBox jBHoraVuelo;
    private javax.swing.JCheckBox jBPrecioActualizar;
    private javax.swing.JButton jBRegistrar;
    private javax.swing.JButton jBRegresarMenu;
    private javax.swing.JCheckBox jBVueloDestino;
    private javax.swing.JCheckBox jBVueloOrigen;
    private javax.swing.JCheckBox jBfecha;
    private javax.swing.JCheckBox jCBHoraVuelo;
    private javax.swing.JCheckBox jCBIDvuelo;
    private javax.swing.JCheckBox jCBPrecio;
    private javax.swing.JCheckBox jCBVueloDestino;
    private javax.swing.JCheckBox jCBVueloOrigen;
    private javax.swing.JCheckBox jCBaerolinea;
    private javax.swing.JComboBox<String> jCBdestinoVuelo;
    private javax.swing.JCheckBox jCBfecha;
    private javax.swing.JComboBox<String> jCBorigenVuelo;
    private com.toedter.calendar.JDateChooser jDCfechaActualizar;
    private com.toedter.calendar.JDateChooser jDCfechaVuelo;
    private com.toedter.calendar.JDateChooser jDChora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTFElegirRegistro;
    private javax.swing.JTextField jTFHoraVuelo;
    private javax.swing.JTextField jTFIDVuelo;
    private javax.swing.JTextField jTFIngresoDatoABuscar;
    private javax.swing.JTextField jTFPrecioVuelo;
    private javax.swing.JTextField jTFaerolineaActualizar;
    // End of variables declaration//GEN-END:variables

    
}
